name: dsx
terms:
  # terms_url: https://dsx.uk/docs/user_agreement.pdf
  permission: null
  search_targets:
  - tag: div
    class: canvasWrapper
  - tag: div
    class: textLayer
api_url: https://dsx.uk/
rate_limit: null
requests:
  currency_pairs:
    request:
      template: mapi/info/
      pair_template: null
      params: null
    response:
      type: dict
      values:
        server_time:
          type:
          - int
          - fromtimestamp
        pairs:
          type: dict
          values:
            currency_pair: # variable key, each available currency pair, e.g. ethusd
              type: dict
              values:
                decimal_places:
                  type: int
                min_price:
                  type: float
                max_price:
                  type: float
                min_amount:
                  type: float
                hidden:
                  type: int
                fee:
                  type: int
                amount_decimal_places:
                  type: int
                quoted_currency: # i.e. "USD"
                  type: str
                base_currency: # i.e. "ETH"
                  type: str
    mapping:
    - key: currency_pair_first
      path:
      - pairs
      - dict_values
      - base_currency
      type:
      - str
    - key: currency_pair_second
      path:
      - pairs
      - dict_values
      - quoted_currency
      type:
      - str

  order_book:
    request:
      template: mapi/depth/{currency_pair}/
      pair_template: # e.g. btcusd
        template: "{first}{second}"
        lower_case: true
      params: null
    response:
      type: dict
      values:
        currency_pair: # variable key, requested currency pair, i.e. "btcusd"
          type: dict
          values:
            asks:
              type: list
              values:
                type: list
                values:
                  0: # price
                    type: float
                  1: # amount
                    type: float
            bids:
              type: list
              values:
                type: list
                values:
                  0: # price
                    type: float
                  1: # amount
                    type: float
    mapping:
    - key: order_book_time
      path: []
      type:
      - none
      - now
    - key: order_book_asks_price
      path:
      - dict_values
      - asks
      - 0
      type:
      - float
    - key: order_book_asks_size
      path:
      - dict_values
      - asks
      - 1
      type:
      - float
    - key: order_book_bids_price
      path:
      - dict_values
      - bids
      - 0
      type:
      - float
    - key: order_book_bids_size
      path:
      - dict_values
      - bids
      - 1
      type:
      - float

  trades:
    request:
      template: mapi/trades/{currency_pair}/
      pair_template: # e.g. btcusd
        template: "{first}{second}"
        lower_case: true
      params: null
    response:
      type: dict
      values:
        currency_pair: # variable key, requested currency pair, i.e. "btcusd"
          type: list
          values:
            type: dict
            values:
              amount:
                type: float
              price:
                type: float
              timestamp:
                type:
                - int
                - fromtimestamp
              tid:
                type: int
              type: # "bid" / "ask"
                type: str
    mapping:
    - key: trade_amount
      path:
      - dict_values
      - amount
      type:
      - float
    - key: trade_last_price
      path:
      - dict_values
      - price
      type:
      - float
    - key: trade_time
      path:
      - dict_values
      - timestamp
      type:
      - int
      - fromtimestamp
    - key: trade_side
      path:
      - dict_values
      - type
      type:
      - str

  ticker:
    request:
      template: mapi/ticker/{currency_pair}/
      pair_template: # e.g. btcusd
        template: "{first}{second}"
        lower_case: true
      params: null
    response:
      type: dict
      values:
        currency_pair: # variable key, requested currency pair, i.e. "btcusd"
          type: dict
          values:
            high:
              type: float
            low:
              type: float
            last:
              type: float
            buy:
              type: float
            sell:
              type: float
            updated:
              type:
              - int
              - fromtimestamp
            avg:
              type: float
            vol:
              type: float
            vol_cur:
              type: float
    mapping:
    - key: ticker_last_price
      path:
      - dict_values
      - last
      type:
      - float
    - key: ticker_best_bid
      path:
      - dict_values
      - buy
      type:
      - float
    - key: ticker_best_ask
      path:
      - dict_values
      - sell
      type:
      - float
    - key: ticker_time
      path:
      - dict_values
      - updated
      type:
      - int
      - fromtimestamp
    - key: ticker_daily_volume
      path:
      - dict_values
      - vol
      type:
      - float
