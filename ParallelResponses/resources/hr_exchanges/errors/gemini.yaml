name: gemini
terms:
  terms_url: https://gemini.com/api-agreement/#gemini-market-data
  permission: null
  search_targets:
  - tag: div
    class: container-fluid
  - tag: div
    class: row
  - tag: section
    class: col-lg-8 col-xl-7 offset-xl-1 col-md-10 offset-md-1 offset-lg-0 content page-content
api_url: https://api.gemini.com/v1/
rate_limit: # For public API entry points, we limit requests to 120 requests per minute, and recommend that you do not exceed 1 request per second.
  max: 120 # recommended: 60
  unit: 60
requests:
  currency_pairs:
    request:
      template: symbols/
      pair_template: null
      params: null
    response:
      type: list
      values: # each available currency pair, i.e. "btcusd"
        type: str
    mapping: # TODO split Methode
    - key: currency_pair_first
      path:
      - 0
      type:
      - str
      - split
      - ""
    - key: currency_pair_second
      path:
      - 1
      type:
      - str
      - split
      - ""

  ticker:
    request:
      template: pubticker/{currency_pair}/
      pair_template: # e.g. btcusd
        template: "{first}{second}"
        lower_case: true
      params: null
    response:
      type: dict
      values:
        ask: # The lowest ask currently available
          type:
          - str
          - float
        bid: # The highest bid currently available
          type:
          - str
          - float
        last: # The price of the last executed trade
          type:
          - str
          - float
        volume: # Information about the 24 hour volume on the exchange.
          type: dict
          values:
            first: # first currency symbols
              type: # The volume denominated in the quantity currency
              - str
              - float
            second: # first currency symbols
              type: # The volume denominated in the price currency
              - str
              - float
            timestamp:
              type:
              - int
              - fromtimestampms
    mapping:
    - key: ticker_best_ask
      path:
      - ask
      type:
      - str
      - float
    - key: ticker_best_bid
      path:
      - bid
      type:
      - str
      - float
    - key: ticker_last_price
      path:
      - last
      type:
      - str
      - float
    - key: ticker_time
      path:
      - volume
      - timestamp
      type:
      - int
      - fromtimestampms

  order_book:
    request:
      template: book/{currency_pair}
      pair_template: # e.g. btcusd
        template: "{first}{second}"
        lower_case: true
      params:
        limit_bids: # Optional. Limit the number of bids (offers to buy) returned. Default is 50. May be 0 to return the full order book on this side.
          type: int
          default: 50
        limit_asks: # Optional. Limit the number of asks (offers to sell) returned. Default is 50. May be 0 to return the full order book on this side.
          type: int
          default: 50
    response:
      type: dict
      values:
        bids: # The bids currently on the book. These are offers to buy at a given price
          type: list
          values:
            type: dict
            values:
              amount: # The total quantity remaining at the price
                type:
                - str
                - float
              price: # The price
                type:
                - str
                - float
              timestamp: # DO NOT USE - this field is included for compatibility reasons only and is just populated with a dummy value.
                type:
                - str
                - int
                - fromtimestamp
        asks: # The asks currently on the book. These are offers to sell at a given price
          type: list
          values:
            type: dict
            values:
              amount: # The total quantity remaining at the price
                type:
                - str
                - float
              price: # The price
                type:
                - str
                - float
              timestamp: # DO NOT USE - this field is included for compatibility reasons only and is just populated with a dummy value.
                type:
                - str
                - int
                - fromtimestamp
    mapping:
    - key: order_book_time
      path: []
      type:
      - none
      - now
    - key: order_book_bids_size
      path:
      - bids
      - amount
      type:
      - str
      - float
    - key: order_book_bids_price
      path:
      - bids
      - price
      type:
      - str
      - float
    - key: order_book_asks_size
      path:
      - asks
      - amount
      type:
      - str
      - float
    - key: order_book_asks_price
      path:
      - asks
      - price
      type:
      - str
      - float

  trades: # This public API endpoint is limited to retrieving seven calendar days of data.
    request:
      template: trades/{currency_pair}
      pair_template: # e.g. btcusd
        template: "{first}{second}"
        lower_case: true
      params:
        since: # Optional. Only return trades after this timestamp. If not present, will show the most recent trades.
          type:
          - datetime
          - totimestamp
          required: false
        limit_trades: # Optional. The maximum number of trades to return. The default is 50.
          type: int
          default: 50
        include_breaks: # Optional. Whether to display broken trades. False by default. Can be '1' or 'true' to activate
          type: bool
          required: false
    response:
      type: list
      values:
        type: dict
        values:
          timestamp: # The time that the trade was executed
            type:
            - int
            - fromtimestamp
          timestampms: # The time that the trade was executed in milliseconds
            type:
            - int
            - fromtimestampms
          tid: # The trade ID number
            type: int
          price: # The price the trade was executed at
            type:
            - str
            - float
          amount: # The amount that was traded
            type:
            - str
            - float
          exchange: # Will always be "gemini"
            type: str
          type:
            type: str
            allowed:
            - buy     # buy means that an ask was removed from the book by an incoming buy order
            - sell    # sell means that a bid was removed from the book by an incoming sell order
            - auction # auction indicates a bulk trade from an auction
            - block   # block indicates a block trade
          broken:
            type: bool # Whether the trade was broken or not. Broken trades will not be displayed by default; use the include_breaks to display them.
    mapping:
    - key: trade_time
      path:
      - timestamp
      type:
      - int
      - fromtimestamp
    - key: trade_last_price
      path:
      - price
      type:
      - str
      - float
    - key: trade_amount
      path:
      - amount
      type:
      - str
      - float
    - key: trade_side
      path:
      - type
      type:
      - str
